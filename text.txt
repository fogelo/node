Цикл событий. Во многих языках программирования в таких как C, java, python все инструкции, все команды по умолчанию являются блокирующими, то есть разработчик, который не позаботился об асинхронном выполнении кода заблокирует все приложение. Например мы пытаемся считать файл с файловой системы или же обработать какой-то сетевой запроси и так вот пока этот файл не считается полностью из файловой системы приложение будет заблокировано и другие инструкции выполнятся не будут. Для того чтобы это предотвратить используется так называемая многопотчное программирование - управление потоками (тредами). Параллельное программирование это очень большая тема для изучения, требует хорошей компетенции так вот с циклом событий разработка асинхронных приложений становится гораздо проще, не нужно заморачиваться над созданием физических потоков. И в случае когда node js нужно выполнить какую-то операцию ввод-вывода, загрузки каких то данных по сети, доступа к базе данных, к файловой системе вместо того, чтобы на время операции заблокировать главный поток node js просто продолжает заниматься другими делами до тех пор пока результаты выполнения этой операции не будут получены.
